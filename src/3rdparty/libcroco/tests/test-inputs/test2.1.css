
/*simple Attribute set selectors*/
s1[foo] {prop1 : "\53 tring"}

/* line break is invalid */
s2[foo] {prop1 : "
tring"}

/*simple exact attribute selector, simple ruleset*/
s3[foo="warning"] {prop1 : value1}

/**
 *"space separated value list"
 *attribute selector, simple ruleset
 */
s4[foo~="warning"] {prop1 :value1}

/**
 *"hyphen separated value list" attribute selector,
 * simple ruleset
 */

 /*simple class selector, simple ruleset*/
 s5.warning {prop1 : value}

 E#myid {prop1 : value1}


/*below are tests that we know are working*/

/*simple ident pseudo class selector, simple ruleset test*/
S6:first-child {prop1 : value1 ; prop2 : value2}

/*function pseudo class selector, simple ruleset test*/
S7:lang(c) {prop1 : value1}

/*Adjacent selectors, simple ruleset test*/
S8 + s2 {prop1: value1}

/* quoted strings */
.quotedstrings {
    -test-string1: "foo'bar";
    -test-string2: 'foo\'bar';
    -test-string3: 'foo"bar';
    -test-string4: "foo\"bar";
    -test-string5: 'foo\\bar';
}
